name: Docker build and deploy action
description: Docker image build and deploy into artifactory
author: DA Team <da.team@sherwin.com>
inputs:

  buildcontext:
    description: 'Build Context'
    default: '.'
    required: false

  image_registry:
    description: 'Artifactory URL'
    default: 'docker.artifactory.sherwin.com'
    required: false

  image_registry_username:
    description: 'Artifactory Username'
    required: true

  image_registry_api_key:
    description: 'Artifactory API KEY'
    required: true
    
  dockerfile_path:
    description: 'Dockerfile Path'
    default: 'Dockerfile'
    required: false
    
  docker_build_args:
    description: 'Dockerfile Build Arguments'
    default: ''
    required: false
    
  image_name:
    description: 'Dockerfile Build Arguments'
    default: ${{ github.REPOSITORY }}
    required: false
  
  github_token:
    description: 'Github Token'
    default: ${{ github.TOKEN }}
    required: false
    

runs:
  using: "composite"
  steps:
    - name: Setup docker context for buildx
      id: buildx-context
      run: |
        if  docker context inspect builders ;
        then
          echo "Docker Builders context exist!!"
        else
          docker context create builders
        fi
      shell: bash
      
    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v1
      with:
        endpoint: builders
        driver-opts: image=docker.artifactory.sherwin.com/sherwin-williams-co/sw-moby-buildkit:5
        
    - name: Create GitHub deployment
      uses: sherwin-williams-co/sw-deployment-action@main
      id: deployment
      with:
        token: ${{ inputs.github_token }}
        description:  "Deploying build artifact into artifactory#${{github.RUN_NUMBER}}"
        environment: "build"

    - name: Log in to artifactory docker registry
      uses: docker/login-action@v1
      with:
        registry: '${{ inputs.image_registry }}'
        username: '${{ inputs.image_registry_username }}'
        password: '${{ inputs.image_registry_api_key }}'

    - name: convert reponame to lowercase
      id: lowercasereponame
      run: |
        repoName=`echo "${{inputs.image_name}}" | tr '[:upper:]' '[:lower:]'`
        echo "::set-output name=git_repo_name::${repoName}"
      shell: bash
      
    - name: Build and publish container image
      uses: docker/build-push-action@v2
      with:
        push: true
        context: '${{ inputs.buildcontext }}'
        file: '${{inputs.dockerfile_path}}'
        build-args: '${{inputs.docker_build_args}}'
        tags: |
          ${{inputs.image_registry}}/${{steps.lowercasereponame.outputs.git_repo_name}}:${{ github.RUN_NUMBER }}
          ${{inputs.image_registry}}/${{steps.lowercasereponame.outputs.git_repo_name}}:latest
      
    - name: Update deployment status (success)
      if: success()
      uses: sherwin-williams-co/sw-deployment-status-action@master
      with:
        token: ${{ inputs.github_token }}
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
   
    - name: Update deployment status (failure)
      if: failure()
      uses: sherwin-williams-co/sw-deployment-status-action@master
      with:
        token: ${{ inputs.github_token }}
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
         
branding:
  icon: git-branch
  color: white
